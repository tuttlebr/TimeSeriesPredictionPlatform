# Copyright (c) 2019, NVIDIA CORPORATION. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of NVIDIA CORPORATION nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

{{- if .Values.deployModel.start }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "tspp.fullname" . }}-triton
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ template "tspp.fullname" . }}
    chart: {{ template "tspp.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    type: {{ template "tspp.fullname" . }}-triton
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ template "tspp.fullname" . }}
      release: {{ .Release.Name }}
  serviceName: {{ template "tspp.name" . }}-triton
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ template "tspp.fullname" . }}
        release: {{ .Release.Name }}
        type: {{ template "tspp.fullname" . }}-triton
    spec:
    {{- with .Values.deployModel.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-tspp-triton
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          command: ["/bin/sh"]
          args: ["-c", "until test -d {{ .Values.deployModel.modelPlanFile }}; do echo waiting for deployment config files...; sleep 2; done"]
          env:
            - name: DGLBACKEND
              value: "pytorch"
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: tspp-volume
              mountPath: /workspace/outputs
              subPath: outputs
      containers:
        - name: tspp-triton
          image: "{{ .Values.deployModel.tritonImage }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        {{- with .Values.deployModel.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.deployModel.command }}
          command:
            {{- toYaml . | nindent 12 }}
        {{- end }}
          env:
            - name: DGLBACKEND
              value: "pytorch"
            - name: HYDRA_FULL_ERROR
              value: "1"
          ports:
            - containerPort: 8000
              name: http
            - containerPort: 8001
              name: grpc
            - containerPort: 8002
              name: metrics
          livenessProbe:
            httpGet:
              path: /v2/health/live
              port: http
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            httpGet:
              path: /v2/health/ready
              port: http
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: tspp-volume
              mountPath: /workspace/outputs
              subPath: outputs
            - name: tspp-volume
              mountPath: /workspace/datasets
              subPath: datasets
            # - name: tspp-volume
            #   mountPath: /workspace/conf/dataset
            #   subPath: conf/dataset
      imagePullSecrets:
        - name: imagepullsecret
      volumes:
        - name: tspp-volume
          persistentVolumeClaim:
            claimName: {{ .Values.global.persistentVolumeClaim.name }}
        - name: dshm
          emptyDir:
            medium: Memory
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "tspp.fullname" . }}-triton
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ template "tspp.fullname" . }}
    chart: {{ template "tspp.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  ports:
    - name: http
      port: 8000
      protocol: TCP
      targetPort: http
    - name: grpc
      port: 8001
      protocol: TCP
      targetPort: grpc
    - name: metrics
      port: 8002
      protocol: TCP
      targetPort: metrics
  selector:
    app.kubernetes.io/instance: {{ template "tspp.fullname" . }}
    release: {{ .Release.Name }}
    type: {{ template "tspp.fullname" . }}-triton
{{- end -}}